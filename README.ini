README
This project is my first try to decrypt two-layed crypted message by Meet-In-The-Middle attack method.
I know that decrypt in MITM may be so overcomplicated and looks bad because of it, but I’ll try and correct my mistakes in the future, and now I will explain a little how the algorithm works, at least as I understand it.
Meet-In-The-Middle algorithm decipher two-layers ciphered messages.
Ciphering process:
S=〖Enc〗_K2 (〖Enc〗_K1 (p))
S – ciphered message
EncK2, EncK1 – Ciphering, first and second layers
p – open message
Deciphering process:
p=〖Enc〗_K2^(-1) (〖Enc〗_K1^(-1) (S))
And you may think “Safety of two-layers ciphering can increase safety of this message like: x^n→x^2n, but MITM solve this easy, cause safety increase only like: x^n→〖2x〗^n
MITM suppose that you know at least some bytes of original message and list of assume keys(for example, by 16-bytes ciphering you can brute-force this all). 
Let’s say that layer’s of ciphering writes like:
L0 – open message
L1 – once ciphered message
L2 – twice ciphered message (final message, that we steal)
Firstly, we should crypt and write all values of m_1= 〖Enc〗_K1 (p)(ciphering some bytes of known to us original message) for all assume keys.L_0→L_1
Secondly we decrypt and write in another list all values of m_2= 〖Enc〗_K2^(-1) (S) (deciphered second layer of stealled message) for all assume keys. L_2→L_1
So, we have two tables: m1 table of L1 values by our assume keys and m2 table of L1 values by our assume keys, and as you can guess, matching values of this two tables can give us correct keys. Done! Excellent!))))

